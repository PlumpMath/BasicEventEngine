NAME = BasicEventEngine

OBJS = winobj

DEPS = main
DEPS_BEE = debug resource_structures util game
DEPS_BEE_GAME = resources room transition display window input draw network
DEPS_BEE_RESOURCE_STRUCTURES = sprite sound background font path object room ext/instancedata ext/particles
DEPS_BEE_UTIL = real string dates collision sound messagebox files script network
DEPS = $(foreach var, $(DEPS_BEE), $(OBJS)/bee/$(var).o) $(foreach var, $(DEPS_BEE_RESOURCE_STRUCTURES), $(OBJS)/bee/resource_structures/$(var).o) main

PKGDEPS = libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev libsdl2-net-dev chaiscript
INCLUDE = sdl2 SDL2_image SDL2_ttf SDL2_mixer SDL2_net
LIBS = ${shell i686-w64-mingw32-pkg-config --libs $(INCLUDE)} -lws2_32
WARNS = -Wall -Wextra -Wno-unused-parameter -Wno-unused-variable

#FLAGS = -g -pg -std=c++11 $(WARNS) ${shell i686-w64-mingw32-pkg-config --cflags $(INCLUDE)} -static-libstdc++ -D_WINDOWS
FLAGS = -std=c++11 $(WARNS) ${shell i686-w64-mingw32-pkg-config --cflags $(INCLUDE)} -D_WINDOWS
SCRIPTING = ${shell which chai 2>&1 > /dev/null; echo $$?}
ifeq ($(SCRIPTING),0)
#LIBS +=-ldl
FLAGS +=-D_BEE_SCRIPTING -Ilib/chaiscript/include
endif

CXX = i686-w64-mingw32-g++
BUILD = $(CXX) $(FLAGS) -o $(NAME).exe main.cpp

CLEAN = rm $(NAME).exe gmon.out

main: $(foreach var, $(DEPS_BEE), $(OBJS)/bee/$(var).o) $(foreach var, $(DEPS_BEE_RESOURCE_STRUCTURES), $(OBJS)/bee/resource_structures/$(var).o) main
	$(BUILD) $^ $(LIBS)

$(OBJS)/bee/%.o : bee/%.cpp bee/game.hpp
	$(CXX) $(FLAGS) -c $< -o $@ $(LIBS)
$(OBJS)/bee/resource_structures/%.o : bee/resource_structures/%.cpp bee/game.hpp
	$(CXX) $(FLAGS) -c $< -o $@ $(LIBS)
$(OBJS)/%.o : %.cpp bee/game.hpp
	$(CXX) $(FLAGS) -c $< -o $@ $(LIBS)
bee/game.hpp: dir $(OBJS)/bee/game.o $(OBJS)/bee/util.o resources/resources.hpp
$(OBJS)/bee/game.o: bee/game.cpp $(foreach var, $(DEPS_BEE_GAME), bee/game/$(var).cpp)
$(OBJS)/bee/util.o: bee/util.cpp bee/util.hpp $(foreach var, $(DEPS_BEE_UTIL), bee/util/$(var).hpp)
	$(CXX) $(FLAGS) -c bee/util.cpp -o $(OBJS)/bee/util.o $(LIBS)
dir:
	mkdir -p $(OBJS)/bee/resource_structures/ext
resources/resources.hpp: resources/objects/bee.hpp resources/rooms/test.hpp
	$(CXX) $(FLAGS) -c main.cpp -o $(OBJS)/main.o $(LIBS)

run: main
	./$(NAME)
clean:
	rm -r $(OBJS)
	$(CLEAN)
